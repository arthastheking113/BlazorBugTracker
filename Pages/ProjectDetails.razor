@page "/project/details/{ProjectId}"


@using BlazorBugTracker.Services
@using BlazorBugTracker.Service
@using BlazorBugTracker.Data
@using BlazorBugTracker.Data.Enums
@inject ApplicationDbContext _context
@inject ICustomProjectService _projectService
@inject ICustomRoleService _roleService
@using Microsoft.AspNetCore.Identity
@inject IImageService _imageService
@inject UserManager<CustomUser> _userManager
@inject ICustomFileService _customFileService
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor _httpContextAccessor
@inject ISessionStorageService sessionStorage

@if (currentProject is null)
{
    <div class="loader">Loading...</div>
}
else
{
    <section class="content">

        <!-- Default box -->
        <div class="card">
            <div class="card-header bg-dark">
                <div class="row">
                    <div class="col">
                        <h3 class="card-title">View Project Details</h3>
                    </div>
                </div>

            </div>
            <div class="card-header">
                <div class="row">
                    <div class="col">
                        <a class="btn btn-outline-secondary mr-1"> <i class="fas fa-arrow-circle-left"></i> Back</a>
                        <button type="button" class="btn btn-outline-success mr-1 ml-1" >
                            <i class="fas fa-plus-square"></i> Create New Ticket
                        </button>


                        @if (IsInRoleAdmin || IsProjectManager)
                        {
                            <button class="btn btn-outline-info mr-1 ml-1"><i class="fas fa-pencil-alt"></i> Edit Project</button>
                        }
                        <a class="btn btn-outline-primary ml-1" href="/ticket"><i class="fas fa-ticket-alt"></i> View All Tickets On System</a>

                    </div>
                    <div class="col text-right">
                        <p style="margin-top: 1%; margin-bottom: 0; color: black; font-size: 14px; font-weight: 800; letter-spacing: 1px; text-transform: uppercase; border-radius: 0; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; ">Created on: @currentProject.Created.ToString("dd MMMM yyyy - hh:mm tt")</p>
                    </div>
                </div>

            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12 col-md-12 col-lg-8 order-2 order-md-1">
                        <div class="row" style="border-bottom:1px solid;">
                            <div class="col-12 col-sm-4">
                                <a class="text-dark" href="/project/@currentProject.Id/ticket">
                                    <div class="info-box" style="cursor:pointer;">
                                        <span class="info-box-icon bg-danger elevation-1"><i class="fas fa-poll"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text">Total Tickets</span>
                                            <span class="info-box-number">
                                                @ticketInProject.Count
                                                <small>Tickets</small>
                                            </span>
                                        </div>
                                        <!-- /.info-box-content -->
                                    </div>
                                    <!-- /.info-box -->
                                </a>
                     
                            </div>
                            <div class="col-12 col-sm-4">
                                <a class="text-dark" href="/project/@currentProject.Id/ticket">
                                    <div class="info-box" style="cursor:pointer;">
                                        <span class="info-box-icon bg-warning elevation-1"><i class="fas fa-exclamation"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text">Un-Assigned Tickets</span>
                                            <span class="info-box-number">
                                                @ticketInProject.Where(t => t.IsAssigned == false).Count()
                                                <small>Tickets</small>
                                            </span>
                                        </div>
                                        <!-- /.info-box-content -->
                                    </div>
                                    <!-- /.info-box -->
                                </a>
                    
                            </div>
                            <div class="col-12 col-sm-4">
                                <a class="text-dark" href="/project/@currentProject.Id/ticket">
                                    <div class="info-box" style="cursor:pointer;">
                                        <span class="info-box-icon bg-cyan elevation-1"><i class="fas fa-check-circle"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text">Closed Tickets</span>
                                            <span class="info-box-number">
                                                @ticketInProject.Where(t => t.Status.Name == "Closed").ToList().Count
                                                <small>Tickets</small>
                                            </span>
                                        </div>
                                        <!-- /.info-box-content -->
                                    </div>
                                    <!-- /.info-box -->
                                </a>
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="row mb-0">
                                    <div class="col text-left">
                                        <h4 class="mt-2">Recent Activity</h4>
                                    </div>
                                    <div class="col text-right mr-2">
                                        <h4 class="mt-2 text-white"><a href="/project/@currentProject.Id/ticket" class="btn btn-secondary"><i class="fas fa-eye"></i> View All Tickets In This Project</a></h4>
                                    </div>
                                </div>
                                <hr class="mt-0" />
                                @if (ticketInProject is not null)
                                {
                                    if (ticketInProject.Count >= 5)
                                    {
                                        var count = 1;
                                        foreach (var ticket in ticketInProject)
                                        {
                                            if (count == 6)
                                            {
                                                break;
                                            }
                                            if (ticket.DeveloperId != null && ticket.OwnnerId != null)
                                            {
                                                byte[] imageData = ticket.Developer.ImageData;
                                                string imageType = ticket.Developer.ContentType;
                                                <div class="post">
                                                    <div class="user-block">
                                                        <img class="img-circle img-bordered-sm" src="@_imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                        <span class="username">
                                                            <a href="/ticket/details/@ticket.Id">@(ticket.Ownner.FullName) - @_roleService.ReturnUserRole2(ticket.Ownner) - Ticket #@(ticket.Id)</a>
                                                        </span>
                                                        <span class="description">Shared publicly - @ticket.Created.ToString("dd MMMM yyyy - hh:mm tt")</span>
                                                    </div>
                                                    <!-- /.user-block -->
                                                    <a class="text-dark" href="/ticket/details/@ticket.Id">
                                                        @ticket.Description
                                                    </a>

                                                    <div class="row mt-2">
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-comment-dots"></i> @ticket.Comments.Count Comments </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"> <i class="fas fa-file"></i> @((_context.Attachment.Where(a => a.TicketId == ticket.Id).ToList()).Count) Files Attached </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-user-edit"></i> @((_context.TicketHistory.Where(a => a.TicketId == ticket.Id).ToList()).Count) Changes </a>
                                                    </div>

                                                </div>
                                            }
                                            else
                                            {
                                                byte[] imageData = null;
                                                string imageType = null;
                                                <div class="post">
                                                    <div class="user-block">
                                                        <img class="img-circle img-bordered-sm" src="@_imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                        <span class="username">
                                                            @if (ticket.DeveloperId != null && ticket.OwnnerId != null)
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">Un-Assigned Ticket - Create By @_roleService.ReturnUserRole2(ticket.Ownner) - @(ticket.Ownner.FullName) - Ticket #@(ticket.Id)</a>
                                                            }
                                                            else
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">Un-Assigned Ticket - Create By Unknow - Unknow - Ticket #@(ticket.Id)</a>
                                                            }
                                                        </span>
                                                        <span class="description">Shared publicly - @ticket.Created.ToString("dd MMMM yyyy - hh:mm tt")</span>
                                                    </div>
                                                    <!-- /.user-block -->
                                                    <a class="text-dark" >
                                                        @ticket.Description
                                                    </a>

                                                    <div class="row mt-2">
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-comment-dots"></i> @ticket.Comments.Count Comments </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"> <i class="fas fa-file"></i> @((ticket.Attachments.Where(a => a.TicketId == ticket.Id).ToList()).Count) Files Attached </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-user-edit"></i> @((ticket.TicketHistories.Where(a => a.TicketId == ticket.Id).ToList()).Count) Changes </a>
                                                    </div>

                                                </div>
                                            }



                                            count++;
                                        }
                                    }
                                    else
                                    {
                                        foreach (var ticket in ticketInProject)
                                        {
                                            @if (ticket.DeveloperId != null && ticket.OwnnerId != null)
                                            {
                                                byte[] imageData = ticket.Developer.ImageData;
                                                string imageType = ticket.Developer.ContentType;
                                                <div class="post">
                                                    <div class="user-block">
                                                        <img class="img-circle img-bordered-sm" src="@_imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                        <span class="username">
                                                            @if (ticket.DeveloperId != null && ticket.OwnnerId != null)
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">@(ticket.Ownner.FullName) - Create By @(_roleService.ReturnUserRole2(ticket.Ownner)) - Ticket #@(ticket.Id)</a> 
                                                            }
                                                            else
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">Unknow - Create By Unknow - Ticket #@(ticket.Id)</a>
                                                            }

                                                        </span>
                                                        <span class="description">Shared publicly - @ticket.Created</span>
                                                    </div>
                                                    <!-- /.user-block -->
                                                    <p>
                                                        @ticket.Description
                                                    </p>

                                                    <div class="row">
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-comment-dots"></i> @ticket.Comments.Count Comments </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm"> <i class="fas fa-file"></i> @ticket.Comments.Count Files</a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-user-edit"></i> @((ticket.TicketHistories.Where(a => a.TicketId == ticket.Id).ToList()).Count) Changes </a>

                                                    </div>

                                                </div>
                                            }
                                            else
                                            {
                                                byte[] imageData = null;
                                                string imageType = null;
                                                <div class="post">
                                                    <div class="user-block">
                                                        <img class="img-circle img-bordered-sm" src="@_imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                        <span class="username">
                                                            @if (ticket.DeveloperId != null && ticket.OwnnerId != null)
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">@(ticket.Ownner.FullName) - @_roleService.ReturnUserRole2(ticket.Ownner) - Ticket #@(ticket.Id)</a> }
                                                            else
                                                            {
                                                                <a href="/ticket/details/@ticket.Id">Unknow - Ticket #@(ticket.Id)</a>
                                                            }

                                                        </span>
                                                        <span class="description">Shared publicly - @ticket.Created</span>
                                                    </div>
                                                    <!-- /.user-block -->
                                                    <p>
                                                        @ticket.Description
                                                    </p>

                                                    <div class="row">
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-comment-dots"></i> @ticket.Comments.Count Comments </a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm"> <i class="fas fa-file"></i> @ticket.Comments.Count Files</a>
                                                        <a href="/ticket/details/@ticket.Id" class="link-black text-sm mr-2"><i class="fas fa-user-edit"></i> @((ticket.TicketHistories.Where(a => a.TicketId == ticket.Id).ToList()).Count) Changes </a>
                                                    </div>

                                                </div>
                                            }




                                        }
                                    }

                                }

                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-lg-4 order-1 order-md-2">
                        <img src="@(_imageService.DecodeFile(currentProject.ImageData,currentProject.ContentType))" style="width:100%" />
                        <h3 class="text-primary"><i class="fas fa-paint-brush"></i> @currentProject.Name</h3>
                        <p class="text-muted">@currentProject.Description</p>
                        <br>
                        <div class="text-muted">
                            <div class="row">
                                <div class="col">
                                    <p class="text-sm">
                                        Client Company
                                        <b class="d-block">@currentProject.Company.Name</b>
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <p class="text-sm">
                                        Project Leader

                                        @if (projectManager is not null)
                                        {
                                            <b class="d-block">@(projectManager.FullName)</b>
                                        }
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                    <div class="col">
                                        <p class="text-sm">
                                            Developer
                                            @if (developerOnProject.Count != 0)
                                            {
                                                foreach (var developer in developerOnProject)
                                                {
                                                    <b class="d-block">@(developer.FullName)</b>
                                                }
                                            }

                                        </p>
                                    </div>
                                    <div class="col">
                                        <p class="text-sm">
                                            Submitter
                                            @if (submitterOnProject.Count != 0)
                                            {
                                                foreach (var submitter in submitterOnProject)
                                                {
                                                    <b class="d-block">@(submitter.FullName)</b>
                                                }
                                            }

                                        </p>
                                    </div>
                                </div>


                        </div>

                        <h5 class="mt-5 text-muted">Project files</h5>

                        <div class="row">
                            <form asp-action="Create" asp-controller="ProjectAttachments" enctype="multipart/form-data" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="@currentProject.Id" name="ProjectId">
                                <div class="media-body ml-3">
                                    <div class="row">
                                        <div class="col-4">
                                            <label>
                                                Description

                                            </label>
                                            <input name="Description" type="text" class="form-control" />
                                        </div>
                                        <div class="col">
                                            <br />
                                            <input type="file" />
                                        </div>
                                        <div class="col">
                                           <br />
                                            <button type="submit" class="btn btn-sm btn-primary">Upload</button>
                                        </div>
                                    </div>
                                </div>

                            </form>
                        </div>
                        <div class="row clearfix">
                            @if (currentProject.Attachments is not null)
                            {
                                @foreach (var item in currentProject.Attachments)
                                {
                                    <div class="col-2">
                                        <div class="card">
                                            <div class="file">
                                                <a>
                                                    <div class="hover">
                                                        <button  class="btn btn-icon btn-danger"><i class="fa fa-trash"></i> </button>

                                                    </div>
                                                    <div class="icon">
                                                        <img src="@_customFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                                    </div>
                                                    <div class="file-name">
                                                        <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                                        <small>Size: @_customFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("MMM dd, yyyy")</span></small>
                                                    </div>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                 }
                            }

                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->

    </section>
}


@code {
    [Parameter]
    public string ProjectId { get; set; }
    public Models.CustomUser user = new();
    public Models.CustomUser projectManager = new();
    public Models.Project currentProject = new();
    public List<Models.Ticket> ticketInProject = new();
    public List<Models.CustomUser> developerOnProject = new();
    public List<Models.CustomUser> submitterOnProject = new();
    public int CloseId;
    public bool IsInRoleAdmin;
    public bool IsDeveloper;
    public bool IsSubmitter;
    public bool IsProjectManager;
    public bool IsNewUser;
    public DateTime currentTime;

    protected override async Task  OnInitializedAsync()
    {
        await GetData();
    }



    public async Task GetData()
    {
        currentProject = _context.Project
            .Include(p => p.Attachments)
            .Include(p => p.Company)
            .Include(p => p.CustomUsers)
            .Include(p => p.Tickets)
            .FirstOrDefault(p => p.Id == Convert.ToInt32(ProjectId));
        ticketInProject = _context.Ticket
            .Include(t => t.Attachments)
            .Include(t => t.Comments)
            .Include(t => t.Developer)
            .Include(t => t.Ownner)
            .Include(t => t.Priority)
            .Include(t => t.Project)
            .Include(t => t.Status)
            .Include(t => t.TicketHistories)
            .Include(t => t.TicketType)
            .Where(t => t.ProjectId == currentProject.Id).ToList();
        CloseId = _context.Status.FirstOrDefault(s => s.Name == "Closed").Id;


        currentTime = DateTime.Now;
        projectManager = _projectService.ProjectManagerOnProject(currentProject.Id);
        if (projectManager is null)
        {
            projectManager = null;
        }
        developerOnProject = (_projectService.DeveloperOnProject(currentProject.Id)).ToList();

        submitterOnProject = (_projectService.SubmitterOnProject(currentProject.Id)).ToList();


        var currrentUser = _httpContextAccessor.HttpContext.User;
        user = await _userManager.GetUserAsync(currrentUser);
        IsInRoleAdmin = await _userManager.IsInRoleAsync(user, Roles.Admin.ToString());
        IsDeveloper = await _userManager.IsInRoleAsync(user, Roles.Developer.ToString());
        IsNewUser = await _userManager.IsInRoleAsync(user, Roles.NewUser.ToString());
        IsSubmitter = await _userManager.IsInRoleAsync(user, Roles.Submitter.ToString());
        IsProjectManager = await _userManager.IsInRoleAsync(user, Roles.ProjectManager.ToString());
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //user = await sessionStorage.GetItemAsync<CustomUser>("user");
        //IsInRoleAdmin = await sessionStorage.GetItemAsync<bool>("IsInRoleAdmin");
        //IsDeveloper = await sessionStorage.GetItemAsync<bool>("IsDeveloper");
        //IsNewUser = await sessionStorage.GetItemAsync<bool>("IsNewUser");
        //IsSubmitter = await sessionStorage.GetItemAsync<bool>("IsSubmitter");
        //IsProjectManager = await sessionStorage.GetItemAsync<bool>("IsProjectManager");
    }

}
