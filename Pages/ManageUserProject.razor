@page "/manage/project/user"

@using BlazorBugTracker.Data
@using BlazorBugTracker.Services
@using Microsoft.AspNetCore.Identity
@inject IJSRuntime JSRuntime 
@inject ApplicationDbContext _context
@inject UserManager<CustomUser> _userManager
@inject ICustomRoleService _roleService
@inject ICustomProjectService _projectService
<div class="container-fluid" >
    <div class="shadow-lg mb-5 bg-white rounded">
        <div class="row">
            <div class="col pl-0 pr-0">
                <div class="card mb-0">
                    <div class="card-header bg-dark">
                        <h3 class="card-title">Manager User Project</h3>
                    </div>
                    <div class="card-body">
                        <EditForm Model="userProject" OnValidSubmit="SubmitForm" >
                            <div class="row">
                                <div class="col-md p-3">
                                    <div class="row">
                                        <div class="col">
                                            Project
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                <RadzenListBox AllowFiltering="true" AllowClear="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@ProjectSelected Data=@ProjectList TextProperty="Name" ValueProperty="Id"
                                                               TValue="int" Placeholder="Select Project..." Style="height:400px;width:100%" />
                                            </div>


                                        </div>

                                    </div>
                                </div>
                                <div class="col-md  p-3">
                                    <div class="row">
                                        <div class="col">
                                            Project Manager
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                <RadzenListBox AllowFiltering="true" AllowClear="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@ProjectManagerSelected Data=@ProjectManagerList TextProperty="FullName" ValueProperty="Id"
                                                               TValue="string" Placeholder="Select Project Manager..." Style="height:400px;width:100%" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md p-3">
                                    <div class="row">
                                        <div class="col">
                                            Developers
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="card card-default">
                                                <div class="card-body" style="padding:0;">
                                                    <div class="row">
                                                        <div class="col-12">
                                                           

                                                                <RadzenListBox AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" TValue="IEnumerable<string>" Multiple="true" Data=@DeveloperList
                                                                               Change=@(args => OnChangeSelectDeveloper(args)) Placeholder="Select Developer..." TextProperty="FullName" ValueProperty="Id" Style="height:400px;width:100%" />

                                                          
                                                            <!-- /.form-group -->
                                                        </div>
                                                        <!-- /.col -->
                                                    </div>
                                                    <!-- /.row -->
                                                </div>
                                                <!-- /.card-body -->
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md p-3">
                                    <div class="row">
                                        <div class="col">
                                            Submitters
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="card card-default">
                                                <div class="card-body" style="padding:0;">
                                                    <div class="row">
                                                        <div class="col-12">
                                                         

                                                                <RadzenListBox AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" TValue="IEnumerable<string>" Multiple="true" Data=@SubmitterList
                                                                               Change=@(args => OnChangeSelectSubmitter(args)) Placeholder="Select Submitter..." TextProperty="FullName" ValueProperty="Id" Style="height:400px;width:100%" />

                                                           
                                                            <!-- /.form-group -->
                                                        </div>
                                                        <!-- /.col -->
                                                    </div>
                                                    <!-- /.row -->
                                                </div>
                                                <!-- /.card-body -->
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col text-center">
                                    <input type="submit" class="btn btn-secondary" value="         Save         " />
                                    <a asp-controller="Projects" asp-action="ManagerUserProject" class="btn text-white btn-secondary">Cancel</a>
                                </div>
                            </div>
                        </EditForm>

                        <div class="row">
                            <div class="col">
                                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                                                FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@ProjectList" TItem="Models.Project" ColumnWidth="100%"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                LogicalFilterOperator="LogicalFilterOperator.Or">
                                    <Columns>
                                        <RadzenDataGridColumn TItem="Models.Project" Property="Id"  Title="ID" Width="50px" TextAlign="TextAlign.Center" />

                                        <RadzenDataGridColumn TItem="Models.Project" Property="Name" Title="Name"  Width="250px"/>
                                        <RadzenDataGridColumn TItem="Models.Project" Property="Description" Title="Description" />
                                        <RadzenDataGridColumn TItem="Models.Project"  Property="Id" Title="PM"  Width="150px">
                                            <Template Context="data">
                                               @if (_projectService.ProjectManagerOnProject(data.Id) is not null)
                                               {
                                                   <p>@_projectService.ProjectManagerOnProject(data.Id).FullName</p>
                                               }
                                                

                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="Models.Project" Title="Developer" Width="150px">
                                            <Template Context="data">
                                                @foreach (var item in _projectService.DeveloperOnProject(data.Id).ToList())
                                                {
                                                    <p>@item.FullName</p>
                                                }

                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="Models.Project" Title="Submitter" Width="150px">
                                            <Template Context="data">
                                                @foreach (var item in _projectService.SubmitterOnProject(data.Id).ToList())
                                                {
                                                    <p>@item.FullName</p>
                                                }

                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGrid>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

@code {
    public List<Models.CustomUser> AllUser = new();
    public List<Models.CustomUser> DeveloperList = new();
    public List<Models.CustomUser> SubmitterList= new();
    public List<Models.CustomUser> ProjectManagerList = new();
    public List<Models.Project> ProjectList = new();
    public List<IdentityRole> RoleList = new();
    public List<string> DeveloperSelected = new();
    public List<string> SubmitterSelected = new();
    public Models.ChangeUserModel userProject = new();
    public int ProjectSelected;
    public int ViewProjectSelected;
    public string ProjectManagerSelected;

    protected override void OnInitialized()
    {
        GetData();
    }

    public void GetData()
    {
        DeveloperList = new();
        SubmitterList = new();
        ProjectManagerList = new();
        AllUser = _context.Users.ToList();
        ProjectList = _context.Project.ToList();
        RoleList = _context.Roles.ToList();
        var DeveloperRoleId = RoleList.FirstOrDefault(r => r.Name == Roles.Developer.ToString()).Id;
        var DeveloperListId = _context.UserRoles.Where(r => r.RoleId == DeveloperRoleId).ToList();
        foreach (var item in DeveloperListId)
        {
            DeveloperList.Add(AllUser.FirstOrDefault(r => r.Id == item.UserId));
        }


        var SubmitterRoleId = RoleList.FirstOrDefault(r => r.Name == Roles.Submitter.ToString()).Id;
        var SubmitterListId = _context.UserRoles.Where(r => r.RoleId == SubmitterRoleId).ToList();
        foreach (var item in SubmitterListId)
        {
            SubmitterList.Add(AllUser.FirstOrDefault(r => r.Id == item.UserId));
        }


        var ProjectManagerRoleId = RoleList.FirstOrDefault(r => r.Name == Roles.ProjectManager.ToString()).Id;
        var ProjectManagerListId = _context.UserRoles.Where(r => r.RoleId == ProjectManagerRoleId).ToList();
        foreach (var item in ProjectManagerListId)
        {
            ProjectManagerList.Add(AllUser.FirstOrDefault(r => r.Id == item.UserId));
        }


    }
    public async Task SubmitForm()
    {
        try
        {
            var currentlyOnProject = _projectService.UserOnProject(ProjectSelected);
            foreach (var user in currentlyOnProject)
            {
                _projectService.RemoveUserFromProject(user.Id, ProjectSelected);
            }
            _projectService.AddUserToProject(ProjectManagerSelected.Split(",").ToList(), ProjectSelected);

            _projectService.AddUserToProject(DeveloperSelected, ProjectSelected);

   
            _projectService.AddUserToProject(SubmitterSelected, ProjectSelected);
     
            ProjectManagerSelected = null;
            DeveloperSelected = new();
            SubmitterSelected = new();
            GetData();
            await JSRuntime.InvokeVoidAsync("success", null);
        }
        catch(Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("error", null);
        }


    }

    public void OnChangeSelectDeveloper(object value)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        if (str is not null)
        {
            var users = str.ToString().Split(",").ToList();
            DeveloperSelected = users;
        }
    }

    public void OnChangeSelectSubmitter(object value)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        if (str is not null)
        {
            var users = str.ToString().Split(",").ToList();
            SubmitterSelected = users;
        }
    }


}
