@page "/ticket/details/{TicketId}"

@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@using Microsoft.EntityFrameworkCore
@using BlazorBugTracker.Services
@inject ICustomRoleService _roleService
@inject ICustomProjectService _projectService
@inject IImageService _imageService
@inject ICustomFileService _customFileService
@inject IHttpContextAccessor _httpContextAccessor
@inject UserManager<CustomUser> _userManager
@using BlazorBugTracker.Data
@inject ApplicationDbContext _context
@inject IJSRuntime JSRuntime
@inject ISessionStorageService sessionStorage
@if (currentTicket.Name is null || user.FullName is null)
{
    <div class="loader">Loading...</div>
}
else
{

    <div class="row">

        <div class="col-5">
            <div class="card">
                <div class="card-header bg-dark">
                    Ticket #@currentTicket.Id - Details
                </div>

                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-2">
                            Id
                        </dt>
                        <dd class="col-sm-10">
                            #@currentTicket.Id
                        </dd>
                        <dt class="col-sm-2">
                            Name
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Name
                        </dd>
                        <dt class="col-sm-2">
                            Description
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Description
                        </dd>
                        <dt class="col-sm-2">
                            Created
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Created.ToString("dddd dd MMMM yyyy hh:mm tt")
                        </dd>
                        <dt class="col-sm-2">
                            Updated
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Updated.ToString("dddd dd MMMM yyyy hh:mm tt")
                        </dd>
                        <dt class="col-sm-2">
                            Developer
                        </dt>
                        <dd class="col-sm-10">
                            @if (currentTicket.Developer is not null)
                            {
                                <p>@currentTicket.Developer.FullName</p>
                            }

                        </dd>
                        <dt class="col-sm-2">
                            Ownner
                        </dt>
                        <dd class="col-sm-10">
                            @if (currentTicket.Ownner is not null)
                            {
                                <p>@currentTicket.Ownner.FullName</p>
                            }

                        </dd>
                        <dt class="col-sm-2">
                            Project
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Project.Name
                        </dd>
                        <dt class="col-sm-2">
                            Status
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Status.Name
                        </dd>
                        <dt class="col-sm-2">
                            Priority
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.Priority.Name
                        </dd>
                        <dt class="col-sm-2">
                            TicketType
                        </dt>
                        <dd class="col-sm-10">
                            @currentTicket.TicketType.Name
                        </dd>
                    </dl>
                    <div class="row">
                        <div class="col">

                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                                Edit
                            </button>



                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal2">
                                Delete
                            </button>



                            <a class="btn btn-secondary" asp-action="Index">Back to List</a>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card">
                <div class="card-header bg-dark">
                    <h3 class="card-title"> Attach File (@(currentTicket.Attachments.Count))</h3>
                </div>
                <div class="card-body">
                    <div class="row ">
                        <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                            <div asp-validation-summary="currentTicketOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="@currentTicket.Id" name="TicketId">
                            <div class="media-body ml-3 ">
                                <label>Description<input name="Description" type="text" class="form-control" required placeholder="Add Description..."></label>
                                <label class="btn btn-outline-secondary btn-sm">
                                    Upload File
                                    <input type="file" required />
                                </label>
                            </div>
                            <div class="row">
                                <div class="col text-center">
                                    <button type="submit" class="btn btn-outline-secondary md-btn-flat">Upload</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">

                        <div class="col">
                            <div class="row clearfix">
                                @if (currentTicket.Attachments.Count != 0)
                                {
                                    foreach (var item in currentTicket.Attachments)
                                    {
                                        <div class="col-sm-2">
                                            <div class="card">
                                                <div class="file">
                                                    <a asp-controller="TicketAttachments" asp-action="Details" asp-route-id="@item.Id">
                                                        <div class="hover">
                                                            <form asp-controller="TicketAttachments" asp-action="Details" asp-route-id="@item.Id">
                                                                <button type="submit" class="btn btn-icon btn-danger">
                                                                    <i class="fa fa-trash"></i>
                                                                </button>
                                                            </form>

                                                        </div>
                                                        <div class="icon">
                                                            <img src="@_customFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                                        </div>
                                                        <div class="file-name">
                                                            <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                                            <small>Size: @_customFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("dd MMMM yyyy - hh:mm tt")</span></small>
                                                        </div>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }

                            </div>
                        </div>

                    </div>
                </div>
            </div>





        </div>

        <div class="col">


            <div class="card">
                <div class="card-header bg-dark">
                    <h3 class="card-title">Ticket Histories (@(currentTicket.TicketHistories.Count))</h3>
                    <div class="card-tools">
                        <div class="input-group input-group-sm">
                            <input type="text" class="form-control" placeholder="Search Histories" id="searchTicketHistory">
                            <div class="input-group-append">
                                <div class="btn btn-primary">
                                    <i class="fas fa-search"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <table class="table" id="tickethistory">
                        <thead>
                            <tr>
                                <th>
                                    Created
                                </th>
                                <th>
                                    Property
                                </th>
                                <th>
                                    Old Value
                                </th>
                                <th>
                                    New Value
                                </th>
                                <th>
                                    User
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (currentTicket.TicketHistories.Count != 0)
                            {
                                foreach (var item in currentTicket.TicketHistories)
                                {
                                    <tr>
                                        <td>
                                            @item.Created.ToString("dddd dd MMMM yyyy hh:mm tt")
                                        </td>
                                        <td>
                                            @item.Property
                                        </td>
                                        <td>
                                            @item.OldValue
                                        </td>
                                        <td>
                                            @item.NewValue
                                        </td>
                                        <td>
                                            @item.CustomUser.FullName
                                        </td>

                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <div class="card">
                        <div class="card-header bg-dark">
                            Comments (@currentTicket.Comments.Count)
                        </div>
                        <div class="card-body">
                            <form asp-controller="Comments" asp-action="Create" method="post">
                                <input type="hidden" name="TicketId" value="@currentTicket.Id" />
                                <input type="hidden" name="CustomUserId" />
                                <div class="form-group">
                                    <textarea id="Content" name="Content" class="form-control" rows="4" required></textarea>
                                </div>

                                <input type="submit" value="Comment" class="btn btn-secondary" />
                            </form>
                        </div>
                    </div>
                    <div class="row">
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    @if (currentTicket.Comments.Count != 0)
                                    {
                                        foreach (var comment in currentTicket.Comments)
                                        {
                                            var timeSpan = currentTime.Subtract(comment.Created);
                                            var eslapseSecond = timeSpan.Seconds;
                                            var eslapseMinute = timeSpan.Minutes;
                                            var eslapseHours = timeSpan.Hours;
                                            var eslapseDate = timeSpan.Days;
                                            string commentdate;
                                            if (eslapseDate >= 1)
                                            {
                                                commentdate = eslapseDate.ToString() + " Days Ago";

                                            }
                                            else if (eslapseHours >= 1)
                                            {
                                                commentdate = eslapseHours.ToString() + " Hours Ago";
                                            }
                                            else if (eslapseMinute >= 1)
                                            {
                                                commentdate = eslapseMinute.ToString() + " Minutes Ago";
                                            }
                                            else
                                            {
                                                commentdate = eslapseSecond.ToString() + " Seconds Ago";
                                            }
                                            <div class="media mb-4" style="border-bottom:2px solid rgb(28, 213, 219)">
                                                <img class="d-flex mr-3 rounded-circle" style="width:5%" src="@_imageService.DecodeFileAvatar(user.ImageData,user.ContentType)" alt="">
                                                <div class="media-body">
                                                    <div class="row">
                                                        <div class="col text-left">
                                                            <h5 class="mt-0">@comment.CustomUser.FullName</h5>
                                                        </div>
                                                        @if (IsInRoleAdmin || IsProjectManager)
                                                        {
                                                            <div class="col text-right">
                                                                <a class="btn btn-secondary" asp-controller="PostComments" asp-action="Edit" asp-route-id="@comment.Id">Edit</a>
                                                                <a class="btn btn-secondary" asp-controller="PostComments" asp-action="Delete" asp-route-id="@comment.Id">Delete</a>
                                                            </div>
                                                        }

                                                    </div>

                                                    <div class="row" style="margin:0px;padding:0px;margin-bottom:15px">
                                                        <div class="col text-left" style="padding:0px 0px">
                                                            @comment.Content
                                                        </div>
                                                        <div class="col text-right">
                                                            <p style="margin:0px;padding:0px;">@commentdate</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        }

                                    }

                                </div>
                            </div>

                        </div>
                    </div>
                </div>


            </div>

        </div>



    </div>

}

@code {
    [Parameter]
    public string TicketId { get; set; }
    public Models.CustomUser user = new();
    public Models.Ticket currentTicket = new();
    public bool IsInRoleAdmin;
    public bool IsDeveloper;
    public bool IsSubmitter;
    public bool IsProjectManager;
    public bool IsNewUser;
    public DateTime currentTime;


    protected override async Task OnInitializedAsync()
    {
        if (!String.IsNullOrEmpty(TicketId))
        {
            await GetData();
        }

    }



    public async Task GetData()
    {
        var id = int.Parse(TicketId);
        currentTicket = _context.Ticket
            .Include(t => t.Ownner)
            .Include(t => t.Developer)
            .Include(t => t.Priority)
            .Include(t => t.Project)
            .Include(t => t.Status)
            .Include(t => t.TicketType)
            .Include(t => t.Attachments)
            .Include(t => t.Comments)
            .Include(t => t.TicketHistories).ThenInclude(t => t.CustomUser)
            .FirstOrDefault(m => m.Id == id);

        currentTime = DateTime.Now;

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        user = await sessionStorage.GetItemAsync<CustomUser>("user");
        IsInRoleAdmin = await sessionStorage.GetItemAsync<bool>("IsInRoleAdmin");
        IsDeveloper = await sessionStorage.GetItemAsync<bool>("IsDeveloper");
        IsNewUser = await sessionStorage.GetItemAsync<bool>("IsNewUser");
        IsSubmitter = await sessionStorage.GetItemAsync<bool>("IsSubmitter");
        IsProjectManager = await sessionStorage.GetItemAsync<bool>("IsProjectManager");
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("enableTable", null);
        }
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {

    }

}
