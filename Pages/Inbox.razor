@page "/inbox"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@inject IHttpContextAccessor _httpContextAccessor
@inject HubConnectionBuilder HubConnectionBuilder
@inject UserManager<CustomUser> _userManager
<div class="container-fluid pr-0 pl-0">
    <div class="row">
        <div class="col pr-0">
            <div id="frame" style="margin-right:0;">
                <div id="sidepanel">
                    <div id="profile">
                        <div class="wrap">
                            <img id="profile-img" src="img/avatar.png" class="online" alt="" />
                            <p>Mike Ross</p>
                        </div>
                    </div>
                    <div id="search">
                        <label for=""><i class="fa fa-search" aria-hidden="true"></i></label>
                        <input type="text" placeholder="Search contacts..." />
                    </div>
                    <div id="contacts">
                        <ul>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status online"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Louis Litt</p>
                                        <p class="preview">You just got LITT up, Mike.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact active">
                                <div class="wrap">
                                    <span class="contact-status busy"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Harvey Specter</p>
                                        <p class="preview">Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and forty six other things.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status away"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Rachel Zane</p>
                                        <p class="preview">I was thinking that we could have chicken tonight, sounds good?</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status online"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Donna Paulsen</p>
                                        <p class="preview">Mike, I know everything! I'm Donna..</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status busy"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Jessica Pearson</p>
                                        <p class="preview">Have you finished the draft on the Hinsenburg deal?</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Harold Gunderson</p>
                                        <p class="preview">Thanks Mike! :)</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Daniel Hardman</p>
                                        <p class="preview">We'll meet again, Mike. Tell Jessica I said 'Hi'.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status busy"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Katrina Bennett</p>
                                        <p class="preview">I've sent you the files for the Garrett trial.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Charles Forstman</p>
                                        <p class="preview">Mike, this isn't over.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status"></span>
                                    <img src="img/avatar.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Jonathan Sidwell</p>
                                        <p class="preview"><span>You:</span> That's bullshit. This deal is solid.</p>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div id="bottom-bar">
                        <button id="addcontact"><i class="fa fa-user-plus fa-fw" aria-hidden="true"></i> <span>Add contact</span></button>
                        <button id="settings"><i class="fa fa-cog fa-fw" aria-hidden="true"></i> <span>Settings</span></button>
                    </div>
                </div>
                <div class="content">
                    <div class="contact-profile">
                        <img src="img/avatar.png" alt="" />
                        <p>Harvey Specter</p>
                        <div class="social-media">
                            <i class="fa fa-facebook" aria-hidden="true"></i>
                            <i class="fa fa-twitter" aria-hidden="true"></i>
                            <i class="fa fa-instagram" aria-hidden="true"></i>
                        </div>
                    </div>
                    <div class="messages pr-0">
                        <ul>
                            <li class="sent">
                                <img src="img/avatar.png" alt="" />
                                <p>How the hell am I supposed to get a jury to believe you when I am not even sure that I do?!</p>
                            </li>
                            <li class="replies">
                                <img src="img/avatar.png" alt="" />
                                <p>When you're backed against the wall, break the god damn thing down.</p>
                            </li>
                            <li class="replies">
                                <img src="img/avatar.png" alt="" />
                                <p>Excuses don't win championships.</p>
                            </li>
                            <li class="sent">
                                <img src="img/avatar.png" alt="" />
                                <p>Oh yeah, did Michael Jordan tell you that?</p>
                            </li>
                            <li class="replies">
                                <img src="img/avatar.png" alt="" />
                                <p>No, I told him that.</p>
                            </li>
                            <li class="replies">
                                <img src="img/avatar.png" alt="" />
                                <p>What are your choices when someone puts a gun to your head?</p>
                            </li>
                            <li class="sent">
                                <img src="img/avatar.png" alt="" />
                                <p>What are you talking about? You do what they say or they shoot you.</p>
                            </li>
                            <li class="replies">
                                <img src="img/avatar.png" alt="" />
                                <p>Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and forty six other things.</p>
                            </li>
                        </ul>
                    </div>
                    <div class="message-input">
                        <div class="wrap">
                            <input type="text" placeholder="Write your message..." />
                            <i class="fa fa-paperclip attachment" aria-hidden="true"></i>
                            <button class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@if (!_isChatting)
{
    <p>
        Enter your name to start chatting:
    </p>

    <input type="text" maxlength="32" @bind="@_username" />
    <button type="button" @onclick="@Chat"><span class="oi oi-chat" aria-hidden="true"></span> Chat!</button>

    // Error messages
    @if (_message != null)
    {
        <div class="invalid-feedback">@_message</div>
        <small id="emailHelp" class="form-text text-muted">@_message</small>
    }
}
else
{
    // banner to show current user
    <div class="alert alert-secondary mt-4" role="alert">
        <span class="oi oi-person mr-2" aria-hidden="true"></span>
        <span>You are connected as <b>@_username</b></span>
        <button class="btn btn-sm btn-warning ml-md-auto" @onclick="@DisconnectAsync">Disconnect</button>
    </div>
    // display messages
    <div id="scrollbox">
        @foreach (var item in _messages)
        {
            @if (item.IsNotice)
            {
                <div class="alert alert-info">@item.Body</div>
            }
            else
            {
                <div class="@item.CSS">
                    <div class="user">@item.Username</div>
                    <div class="msg">@item.Body</div>
                </div>
            }
        }
        <hr />
        <textarea class="input-lg" placeholder="enter your comment" @bind="@_newMessage"></textarea>
        <button class="btn btn-default" @onclick="@(() => SendAsync(_newMessage))">Send</button>
    </div>
}
@code {
    // flag to indicate chat status
    private bool _isChatting = false;

    // name of the user who will be chatting
    private string _username;

    // on-screen message
    private string _message;

    // new message input
    private string _newMessage;

    // list of messages in chat
    public Models.CustomUser user = new();
    private List<Message> _messages = new List<Message>();

    private string _hubUrl;
    private HubConnection _hubConnection;

    public async Task Chat()
    {
        var currrentUser = _httpContextAccessor.HttpContext.User;
        user = await _userManager.GetUserAsync(currrentUser);

        // check username is valid
        if (string.IsNullOrWhiteSpace(user.FullName))
        {
            _message = "Please enter a name";
            return;
        };

        try
        {
            // Start chatting and force refresh UI.
            _isChatting = true;
            await Task.Delay(1);

            // remove old messages if any
            _messages.Clear();

            // Create the chat client
            string baseUrl = NavigationManager.BaseUri;

            _hubUrl = baseUrl.TrimEnd('/') + ChatHub.HubUrl;

            _hubConnection = new HubConnectionBuilder()
                .WithUrl(_hubUrl)
                .Build();

            _hubConnection.On<string, string>("Broadcast", BroadcastMessage);

            await _hubConnection.StartAsync();

            await SendAsync($"[Notice] {_username} joined chat room.");
        }
        catch (Exception e)
        {
            _message = $"ERROR: Failed to start chat client: {e.Message}";
            _isChatting = false;
        }
    }

    private void BroadcastMessage(string name, string message)
    {
        bool isMine = name.Equals(_username, StringComparison.OrdinalIgnoreCase);

        _messages.Add(new Message(name, message, isMine));

        // Inform blazor the UI needs updating
        StateHasChanged();
    }

    private async Task DisconnectAsync()
    {
        if (_isChatting)
        {
            await SendAsync($"[Notice] {_username} left chat room.");

            await _hubConnection.StopAsync();
            await _hubConnection.DisposeAsync();

            _hubConnection = null;
            _isChatting = false;
        }
    }

    private async Task SendAsync(string message)
    {
        if (_isChatting && !string.IsNullOrWhiteSpace(message))
        {
            await _hubConnection.SendAsync("Broadcast", _username, message);

            _newMessage = string.Empty;
        }
    }

    private class Message
    {
        public Message(string username, string body, bool mine)
        {
            Username = username;
            Body = body;
            Mine = mine;
        }

        public string Username { get; set; }
        public string Body { get; set; }
        public bool Mine { get; set; }

        public bool IsNotice => Body.StartsWith("[Notice]");

        public string CSS => Mine ? "sent" : "received";
    }
}